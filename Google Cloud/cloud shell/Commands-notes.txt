Cloud Shell instance is a vm that run debian-based linux OS. So when we work with Cloud Shell, we work with debian.

==============================================================================

1. df -h/ df: to check disk storage

2. curl metadata/computeMetadata/v1/instance/zone: to get the zone where the instance is located

3. ls: to get viewed items in the current directory

4. ls -al: to get all (include hidden)

5. touch <file_name>: to create new file

6. gcloud compute networks subnets expand-ip-range <network_name> --region=<region_name> --prefix-length=16: to change the prefix of ip range of a subnet of region in a network to 16
ex: gcloud compute networks subnets expand-ip-range default --region=us-west1 --prefix-length=16

7. gcloud compute networks subnets describe <subnet_name> --region=<region_name>: to get description of a subnet in a region

8. gcloud compute addresses list: to view all internal and external ip addresses that are available.

9. gcloud compute addresses create <ip_address_name> --addresses <external_ip_address> --region <region_name>: to promote a phemeral external ip address of a region to static external ip address.

10. gcloud compute addresses delete <ip_address_name> --region <region_name>: to delete (release) a reserved ip address in a region (specify the name of ip address that we want to delete).

11. If a VM instance have a permission for read/write api to cloud storage(bucket), we can use this command to get all files of the bucket
- gsutil ls gs://<bucket_name>: get all files of a bucket identified by its name.

12. ping <ip_address>: to ping a server (that server must support icmp protocol).

13. gcloud compute ssh --project <project_name/project_id> --zone <zone_name> <instance_name> --internal-ip: use gcloud shell to ssh to VM instance of a project on a zone using internal ip.

14. export PROJECT_ID=$(gcloud config get-value project): to create a environment variable named "PROJECT_ID" with the value is the id of the working project.
- others ex: export PROJECT_NUMBER=$(gcloud projects describe $PROJECT_ID --format='value(projectNumber)')

15. gcloud projects add-iam-policy-binding $PROJECT_ID \
> --member=serviceAccount:$PROJECT_NUMBER@cloudbuild.gserviceaccount.com \
> --role=roles/run.admin
=> Add 2 IAM policy for a specified project (add service account as member and define its role)

16. gcloud iam service-accounts add-iam-policy-binding \
> $PROJECT_NUMBER-compute@developer.gserviceaccount.com \
> --member=serviceAccount:$PROJECT_NUMBER@cloudbuild.gserviceaccount.com \
> --role=roles/iam.serviceAccountUser
=> Setup admin roles for the service account 
=> update IAM policy for serviceAccount [$PROJECT_NUMBER-compute@developer.gserviceaccount.com].
   Make a binding for members include serviceAccount [$PROJECT_NUMBER@cloudbuild.gserviceaccount.com] to the role 'roles/iam.serviceAccountUser') 





REFERENCES:
for 14,15,16: https://www.youtube.com/watch?v=orZEBSXbmFU&t=327s
	https://github.com/GoogleCloudPlatform/software-delivery-workshop/tree/main/labs/cloudrun-progression

































